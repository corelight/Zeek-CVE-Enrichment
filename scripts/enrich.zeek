@load ./extract_cve

module CVEEnrichment;

type Idx: record {
    ip: addr;
};

type Val: record {
    hostname: string;
    cve_list: string_set;
};


global cve_data: table[addr] of Val = table();

event zeek_init() {
    Input::add_table([
        $source="cve_data.csv",
        $name="cve_data",
        $idx=Idx,
        $val=Val,
        $destination=cve_data,
        $mode=Input::REREAD
    ]);
}

redef record Suricata::Info += {
    orig_cve: string &log &optional;
    resp_cve: string &log &optional;
};

event Suricata::connection_alert(c: connection, msg: Corelight::Suricata::SuricataMsg)
{
    if (!msg?$alert || !msg$alert?$signature)
        return;

    local orig = c$id$orig_h;
    local resp = c$id$resp_h;

    local sig = msg$alert$signature;
    local cve = extract_cve(sig);
    if (cve == "")
        return;

    if (orig in cve_data && cve in cve_data[orig]$cve_list) {
        c$suricata_alert$orig_cve = cve;
    }
    if (resp in cve_data && cve in cve_data[resp]$cve_list) {
        c$suricata_alert$resp_cve = cve;
    }
}
